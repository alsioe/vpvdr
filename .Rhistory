plot(rep(1,100), col=green_funct(100), pch=19, cex=3)
plot(rep(1,100), col=orange_funct(100), pch=19, cex=3)
plot(rep(1,100), col=blue_funct(100), pch=19, cex=3)
plot(rep(1,100), col=purple_funct(100), pch=19, cex=3)
plot(rep(1,100), col=gold_funct(100), pch=19, cex=3)
grey_funct <- colorRampPalette(c('lightgrey', 'black'))
plot(rep(1,100), col=grey_funct(100), pch=19, cex=3)
list_of_colours <- c(green_funct(nSubj/nGroups),
orange_funct(nSubj/nGroups),
blue_funct(nSubj/nGroups)
)
list_of_colours
nSubj
nGroups
list_of_colours <- c(green_funct(nSubj),
orange_funct(nSubj),
blue_funct(nSubj)
)
list_of_colours
?structure
# plot(rep(1,100), col=green_funct(100), pch=19, cex=3)
# plot(rep(1,100), col=orange_funct(100), pch=19, cex=3)
# plot(rep(1,100), col=blue_funct(100), pch=19, cex=3)
# plot(rep(1,100), col=purple_funct(100), pch=19, cex=3)
# plot(rep(1,100), col=gold_funct(100), pch=19, cex=3)
# plot(rep(1,100), col=grey_funct(100), pch=19, cex=3)
structure(.Data = list_of_colours,
name = 'groupalette',
class = 'palette')
groupalette
use_r('palette_by_group')
palette <- function(nGroups, nSubj) {
green_funct <- colorRampPalette(c('lightgreen','darkgreen'))
orange_funct <- colorRampPalette(c('orange', 'darkred'))
blue_funct <- colorRampPalette(c('lightblue', 'darkblue'))
purple_funct <- colorRampPalette(c('magenta', 'purple'))
gold_funct <- colorRampPalette(c('tan', 'gold'))
grey_funct <- colorRampPalette(c('lightgrey', 'black'))
list_of_colours <- c(green_funct(nSubj),
orange_funct(nSubj),
blue_funct(nSubj)
)
# plot(rep(1,100), col=green_funct(100), pch=19, cex=3)
# plot(rep(1,100), col=orange_funct(100), pch=19, cex=3)
# plot(rep(1,100), col=blue_funct(100), pch=19, cex=3)
# plot(rep(1,100), col=purple_funct(100), pch=19, cex=3)
# plot(rep(1,100), col=gold_funct(100), pch=19, cex=3)
# plot(rep(1,100), col=grey_funct(100), pch=19, cex=3)
structure(.Data = list_of_colours,
name = 'groupalette',
class = 'palette')
return(list_of_colours)
}
dfr = data.frame(x = c("A", "B", "C"),
y = 1:3)
g = ggplot(data = df,r
mapping = aes(x = x, y = y)) +
dfr = data.frame(x = c("A", "B", "C"),
y = 1:3)
g = ggplot(data = dfr,
mapping = aes(x = x, y = y)) +
theme_minimal() +
theme(legend.position = c(0.05, 0.95),
legend.justification = c(0, 1),
legend.title = element_blank(),
axis.title = element_blank())
g
g + geom_col(aes(fill = x), colour = "black", size = 2) + ggtitle("Fill")
g + geom_col(aes(colour = x), fill = "white", size = 2) + ggtitle("Colour")
ggplot2::scale_colour_manual(values = palette(nGroups = 2, nSubj = 20))
g +
geom_point(aes(colour = y), size = 3) +
scale_colour_cvi_c("groupalette")
g + geom_col(aes(fill = x), colour = "black", size = 2) + ggtitle("Fill")
g +
geom_point(aes(colour = y), size = 3)
letters()
letters
length(LETTERS)
dfr = data.frame(x = c(LETTERS),
y = rnorm(n = 1:length(LETTERS), mean = 5, sd = 1)
g = ggplot(data = dfr,
dfr = data.frame(x = c(LETTERS),
y = rnorm(n = 1:length(LETTERS), mean = 5, sd = 1)
)
g = ggplot(data = dfr,
mapping = aes(x = x, y = y)) +
theme_minimal() +
theme(legend.position = c(0.05, 0.95),
legend.justification = c(0, 1),
legend.title = element_blank(),
axis.title = element_blank())
g + geom_col(aes(fill = x), colour = "black", size = 2) + ggtitle("Fill")
g + geom_col(aes(colour = x), fill = "white", size = 2) + ggtitle("Colour")
g +
geom_point(aes(colour = y), size = 3)
g +
geom_point(aes(colour = y), size = 3) +
scale_colour_manual = c(palette(nGroups = 1, nSubj = length(LETTERS)))
g +
geom_point(aes(colour = y), size = 3) +
scale_colour_manual(
c(palette(nGroups = 1, nSubj = length(LETTERS)))
)
palette(nGroups = 1, nSubj = length(LETTERS))
groupalette <- palette(nGroups = 1, nSubj = length(LETTERS)))
groupalette <- palette(nGroups = 1, nSubj = length(LETTERS))
groupalette
g +
geom_point(aes(colour = y), size = 3) +
scale_colour_manual(values = groupalette)
g +
geom_point(aes(colour = y), size = 3) +
scale_colour_manual(values = c('#90EE90', '#98BEDB'))
g +
geom_point(aes(colour = y), size = 3) +
scale_fill_manual(values = c('#90EE90', '#98BEDB'))
# The palette with grey:
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
cbPalette
groupalette <- palette(nGroups = 1, nSubj = length(LETTERS))[1:8]
groupalette
g +
geom_point(aes(colour = y), size = 3) +
scale_fill_manual(values = cbPalette)
g +
geom_bar(aes(colour = y), stat ) 'identity')
g +
geom_bar(aes(colour = y), stat = 'identity')
g +
geom_bar(aes(colour = y), stat = 'identity') +
scale_fill_manual(values = cbPalette)
# Generate some data
dfr <- data.frame(xval=rnorm(50), yval=rnorm(50))
# Make color depend on yval
ggplot(dfr, aes(x=xval, y=yval, colour=yval)) + geom_point()
# Use a different gradient
ggplot(dfr, aes(x=xval, y=yval, colour=yval)) + geom_point() +
scale_colour_gradientn(colours=rainbow(4))
g + geom_col(aes(colour = as.factor(x)), fill = "white", size = 2) + ggtitle("Colour")
g + geom_col(aes(colour = as.factor(x)), fill = as.factor(x), size = 2) + ggtitle("Colour")
g + geom_col(aes(colour = as.factor(x)), fill = "white", size = 2) + ggtitle("Colour")
# Make color depend on yval
ggplot(dfr, aes(x=xval, y=yval, colour=yval)) + geom_point()
# Use a different gradient
ggplot(dfr, aes(x=xval, y=yval, colour=yval)) + geom_point() +
scale_colour_gradientn(colours=rainbow(4))
g + geom_col(aes(fill = x), colour = "black", size = 2) + ggtitle("Fill")
rainbow(4)
g + geom_col(aes(fill = x), colour = "black", size = 2) + ggtitle("Fill") +
scale_colour_
g + geom_col(aes(fill = x), colour = "black", size = 2) + ggtitle("Fill")
g + geom_col(aes(fill = x), colour = "black", size = 2) + ggtitle("Fill") +
scale_colour_gradientn(colours = palette(nGroups = 2, nSubj = 20))
palette(nGroups = 2, nSubj = 20)
g + geom_col(aes(fill = x), colour = "black", size = 2) + ggtitle("Fill") +
scale_colour_gradientn(colours = palette(nGroups = 2, nSubj = 20)) +
scale_fill_gradientn(colours = palette(nGroups = 2, nSubj = 20))
g + geom_col(aes(fill = x), colour = "black", size = 2) + ggtitle("Fill") +
scale_colour_gradientn(colours = palette(nGroups = 2, nSubj = 20)) +
scale_fill_manual(colours = palette(nGroups = 2, nSubj = 20))
g + geom_col(aes(fill = x), colour = "black", size = 2) + ggtitle("Fill") +
scale_fill_manual(values = palette(nGroups = 2, nSubj = 20))
g + geom_col(aes(fill = x), colour = "black", size = 2) + ggtitle("Fill") +
scale_fill_manual(values = palette(nGroups = 3, nSubj = 9))
g + geom_col(aes(fill = x), colour = "black", size = 2) + ggtitle("Fill") +
scale_fill_manual(values = palette(nGroups = 4, nSubj = 6))
palette <- function(nGroups, nSubj) {
green_funct <- colorRampPalette(c('lightgreen','darkgreen'))
orange_funct <- colorRampPalette(c('orange', 'darkred'))
blue_funct <- colorRampPalette(c('lightblue', 'darkblue'))
purple_funct <- colorRampPalette(c('magenta', 'purple'))
gold_funct <- colorRampPalette(c('tan', 'gold'))
grey_funct <- colorRampPalette(c('lightgrey', 'black'))
list_of_colours <- c(green_funct(nSubj),
orange_funct(nSubj),
blue_funct(nSubj)
)
# plot(rep(1,100), col=green_funct(100), pch=19, cex=3)
# plot(rep(1,100), col=orange_funct(100), pch=19, cex=3)
# plot(rep(1,100), col=blue_funct(100), pch=19, cex=3)
# plot(rep(1,100), col=purple_funct(100), pch=19, cex=3)
# plot(rep(1,100), col=gold_funct(100), pch=19, cex=3)
# plot(rep(1,100), col=grey_funct(100), pch=19, cex=3)
structure(.Data = list_of_colours,
name = 'groupalette',
class = 'palette')
return(list_of_colours)
}
g + geom_col(aes(fill = x), colour = "black", size = 2) + ggtitle("Fill") +
scale_fill_manual(values = palette(nGroups = 4, nSubj = 6))
list_of_colours <- vector(mode = 'character')
if (nGroups > 0) list_of_colours <- c(list_of_colours, green_funct(nSubj))
nSubj
palette <- function(nGroups, nSubj) {
green_funct <- colorRampPalette(c('lightgreen','darkgreen'))
orange_funct <- colorRampPalette(c('orange', 'darkred'))
blue_funct <- colorRampPalette(c('lightblue', 'darkblue'))
purple_funct <- colorRampPalette(c('magenta', 'purple'))
gold_funct <- colorRampPalette(c('tan', 'gold'))
grey_funct <- colorRampPalette(c('lightgrey', 'black'))
list_of_colours <- vector(mode = 'character')
if (nGroups > 0) list_of_colours <- c(list_of_colours, green_funct(nSubj))
if (nGroups > 1) list_of_colours <- c(list_of_colours, orange_funct(nSubj))
if (nGroups > 2) list_of_colours <- c(list_of_colours, blue_funct(nSubj))
if (nGroups > 3) list_of_colours <- c(list_of_colours, purple_funct(nSubj))
if (nGroups > 4) list_of_colours <- c(list_of_colours, gold_funct(nSubj))
if (nGroups > 5) list_of_colours <- c(list_of_colours, grey_funct(nSubj))
# plot(rep(1,100), col=green_funct(100), pch=19, cex=3)
# plot(rep(1,100), col=orange_funct(100), pch=19, cex=3)
# plot(rep(1,100), col=blue_funct(100), pch=19, cex=3)
# plot(rep(1,100), col=purple_funct(100), pch=19, cex=3)
# plot(rep(1,100), col=gold_funct(100), pch=19, cex=3)
# plot(rep(1,100), col=grey_funct(100), pch=19, cex=3)
# Exclude this bit?
# structure(.Data = list_of_colours,
#           name = 'groupalette',
#           class = 'palette')
#
return(list_of_colours)
}
# Generate some data
dfr <- data.frame(xval=rnorm(50), yval=rnorm(50))
# Make color depend on yval
ggplot(dfr, aes(x=xval, y=yval, colour=yval)) + geom_point()
# Use a different gradient
ggplot(dfr, aes(x=xval, y=yval, colour=yval)) + geom_point() +
scale_colour_gradientn(colours=rainbow(4))
g + geom_col(aes(fill = x), colour = "black", size = 2) + ggtitle("Fill") +
scale_fill_manual(values = palette(nGroups = 4, nSubj = 6))
g + geom_col(aes(fill = x), colour = "black", size = 2) + ggtitle("Fill") +
scale_fill_manual(values = palette(nGroups = 4, nSubj = 7))
palette <- function(nGroups, nSubj) {
green_funct <- colorRampPalette(c('lightgreen','darkgreen'))
orange_funct <- colorRampPalette(c('orange', 'darkred'))
blue_funct <- colorRampPalette(c('lightblue', 'darkblue'))
purple_funct <- colorRampPalette(c('magenta', 'purple'))
gold_funct <- colorRampPalette(c('tan', 'gold'))
grey_funct <- colorRampPalette(c('lightgrey', 'black'))
list_of_colours <- vector(mode = 'character')
if (nGroups > 0) list_of_colours <- c(list_of_colours, green_funct(nSubj))
if (nGroups > 1) list_of_colours <- c(list_of_colours, orange_funct(nSubj))
if (nGroups > 2) list_of_colours <- c(list_of_colours, blue_funct(nSubj))
if (nGroups > 3) list_of_colours <- c(list_of_colours, gold_funct(nSubj))
if (nGroups > 4) list_of_colours <- c(list_of_colours, purple_funct(nSubj))
if (nGroups > 5) list_of_colours <- c(list_of_colours, grey_funct(nSubj))
# plot(rep(1,100), col=green_funct(100), pch=19, cex=3)
# plot(rep(1,100), col=orange_funct(100), pch=19, cex=3)
# plot(rep(1,100), col=blue_funct(100), pch=19, cex=3)
# plot(rep(1,100), col=purple_funct(100), pch=19, cex=3)
# plot(rep(1,100), col=gold_funct(100), pch=19, cex=3)
# plot(rep(1,100), col=grey_funct(100), pch=19, cex=3)
# Exclude this bit?
# structure(.Data = list_of_colours,
#           name = 'groupalette',
#           class = 'palette')
#
return(list_of_colours)
}
# Generate some data
dfr <- data.frame(xval=rnorm(50), yval=rnorm(50))
# Make color depend on yval
ggplot(dfr, aes(x=xval, y=yval, colour=yval)) + geom_point()
# Use a different gradient
ggplot(dfr, aes(x=xval, y=yval, colour=yval)) + geom_point() +
scale_colour_gradientn(colours=rainbow(4))
g + geom_col(aes(fill = x), colour = "black", size = 2) + ggtitle("Fill") +
scale_fill_manual(values = palette(nGroups = 4, nSubj = 7))
g +
geom_bar(aes(colour = y), stat = 'identity') +
scale_fill_manual(values = cbPalette)
ggplot(data = df,
aes(x = session,
y = mean,
colour = subjID)) +
geom_line(alpha = 0.5) +
facet_grid(grouping ~ trial_type) +
ylim(0, 1)
ggplot(data = df,
aes(x = session,
y = mean,
colour = subjID)) +
geom_line(alpha = 0.5) +
facet_grid(grouping ~ trial_type) +
ylim(0, 1) +
scale_fill_manual(values = palette(nGroups = nGroups, nSubj = nSubj))
ggplot(data = df,
aes(x = session,
y = mean,
colour = subjID)) +
geom_line(alpha = 0.5) +
facet_grid(grouping ~ trial_type) +
ylim(0, 1) +
scale_colour_manual(values = palette(nGroups = nGroups, nSubj = nSubj))
palette <- function(nGroups, nSubj) {
green_funct <- colorRampPalette(c('lightgreen','darkgreen'))
orange_funct <- colorRampPalette(c('orange', 'darkred'))
blue_funct <- colorRampPalette(c('lightblue', 'darkblue'))
purple_funct <- colorRampPalette(c('magenta', 'purple'))
gold_funct <- colorRampPalette(c('tan', 'gold'))
grey_funct <- colorRampPalette(c('lightgrey', 'black'))
list_of_colours <- vector(mode = 'character')
if (nGroups > 0) list_of_colours <- c(list_of_colours,
green_funct(nSubj/nGroups))
if (nGroups > 1) list_of_colours <- c(list_of_colours,
orange_funct(nSubj/nGroups))
if (nGroups > 2) list_of_colours <- c(list_of_colours,
blue_funct(nSubj/nGroups))
if (nGroups > 3) list_of_colours <- c(list_of_colours,
gold_funct(nSubj/nGroups))
if (nGroups > 4) list_of_colours <- c(list_of_colours,
purple_funct(nSubj/nGroups))
if (nGroups > 5) list_of_colours <- c(list_of_colours,
grey_funct(nSubj/nGroups))
# plot(rep(1,100), col=green_funct(100), pch=19, cex=3)
# plot(rep(1,100), col=orange_funct(100), pch=19, cex=3)
# plot(rep(1,100), col=blue_funct(100), pch=19, cex=3)
# plot(rep(1,100), col=purple_funct(100), pch=19, cex=3)
# plot(rep(1,100), col=gold_funct(100), pch=19, cex=3)
# plot(rep(1,100), col=grey_funct(100), pch=19, cex=3)
# Exclude this bit?
# structure(.Data = list_of_colours,
#           name = 'groupalette',
#           class = 'palette')
#
return(list_of_colours)
}
ggplot(data = df,
aes(x = session,
y = mean,
colour = subjID)) +
geom_line(alpha = 0.5) +
facet_grid(grouping ~ trial_type) +
ylim(0, 1) +
scale_colour_manual(values = palette(nGroups = nGroups, nSubj = nSubj))
palette <- function(nGroups, nIter) {
green_funct <- colorRampPalette(c('lightgreen','darkgreen'))
orange_funct <- colorRampPalette(c('orange', 'darkred'))
blue_funct <- colorRampPalette(c('lightblue', 'darkblue'))
purple_funct <- colorRampPalette(c('magenta', 'purple'))
gold_funct <- colorRampPalette(c('tan', 'gold'))
grey_funct <- colorRampPalette(c('lightgrey', 'black'))
list_of_colours <- vector(mode = 'character')
if (nGroups > 0) list_of_colours <- c(list_of_colours,
green_funct(nIter))
if (nGroups > 1) list_of_colours <- c(list_of_colours,
orange_funct(nIter))
if (nGroups > 2) list_of_colours <- c(list_of_colours,
blue_funct(nIter))
if (nGroups > 3) list_of_colours <- c(list_of_colours,
gold_funct(nIter))
if (nGroups > 4) list_of_colours <- c(list_of_colours,
purple_funct(nIter))
if (nGroups > 5) list_of_colours <- c(list_of_colours,
grey_funct(nIter))
# plot(rep(1,100), col=green_funct(100), pch=19, cex=3)
# plot(rep(1,100), col=orange_funct(100), pch=19, cex=3)
# plot(rep(1,100), col=blue_funct(100), pch=19, cex=3)
# plot(rep(1,100), col=purple_funct(100), pch=19, cex=3)
# plot(rep(1,100), col=gold_funct(100), pch=19, cex=3)
# plot(rep(1,100), col=grey_funct(100), pch=19, cex=3)
# Exclude this bit?
# structure(.Data = list_of_colours,
#           name = 'groupalette',
#           class = 'palette')
#
return(list_of_colours)
}
# Now, simulate VPVD behaviour with a vectorised simulator
# Let's create a test bed
#
nIter <- 10
nGroups <- 3
nTrials <- 4000
draws <- sample(x = dim(group_params$reinf_sensitivity_by_group_drug)[1],
size = nIter,
replace = FALSE)
w <- group_params$reward_rate_by_group_drug[draws, 1:nGroups, 1]
l <- group_params$punish_rate_by_group_drug[draws, 1:nGroups, 1]
b <- group_params$reinf_sensitivity_by_group_drug[draws, 1:nGroups, 1]
k <- group_params$side_stickiness_by_group_drug[draws, 1:nGroups, 1]
t <- group_params$stimulus_stickiness_by_group_drug[draws, 1:nGroups, 1]
u <- group_params$prob_discount_by_group_drug[draws, 1:nGroups, 1]
# Simulate all subjects in parallel - 8.52 seconds elapsed
system.time(
test_vect <- simulate_choices_vpvd(nTrials = nTrials,
nGroups = nGroups,
nIter = nIter,
alpha_w = w,
alpha_l = l,
beta = b,
kappa = k,
tau = t,
upsilon = u)
)
###############################
# New version of function - now runs in 60 seconds ...
# BUT THERE IS AN ERROR - ALL THREE GROUPINGS GIVE THE SAME NUMBERS
system.time(
df <- summarise_correct(test_vect)
)
str(df)
object.size(df)/1048576
palette <- function(nGroups, nIter) {
green_funct <- colorRampPalette(c('lightgreen','darkgreen'))
orange_funct <- colorRampPalette(c('orange', 'darkred'))
blue_funct <- colorRampPalette(c('lightblue', 'darkblue'))
purple_funct <- colorRampPalette(c('magenta', 'purple'))
gold_funct <- colorRampPalette(c('tan', 'gold'))
grey_funct <- colorRampPalette(c('lightgrey', 'black'))
list_of_colours <- vector(mode = 'character')
if (nGroups > 0) list_of_colours <- c(list_of_colours,
green_funct(nIter))
if (nGroups > 1) list_of_colours <- c(list_of_colours,
orange_funct(nIter))
if (nGroups > 2) list_of_colours <- c(list_of_colours,
blue_funct(nIter))
if (nGroups > 3) list_of_colours <- c(list_of_colours,
gold_funct(nIter))
if (nGroups > 4) list_of_colours <- c(list_of_colours,
purple_funct(nIter))
if (nGroups > 5) list_of_colours <- c(list_of_colours,
grey_funct(nIter))
# plot(rep(1,100), col=green_funct(100), pch=19, cex=3)
# plot(rep(1,100), col=orange_funct(100), pch=19, cex=3)
# plot(rep(1,100), col=blue_funct(100), pch=19, cex=3)
# plot(rep(1,100), col=purple_funct(100), pch=19, cex=3)
# plot(rep(1,100), col=gold_funct(100), pch=19, cex=3)
# plot(rep(1,100), col=grey_funct(100), pch=19, cex=3)
# Exclude this bit?
# structure(.Data = list_of_colours,
#           name = 'groupalette',
#           class = 'palette')
#
return(list_of_colours)
}
head(df)
ggplot(data = df,
aes(x = session,
y = mean,
colour = subjID)) +
geom_line(alpha = 0.5) +
facet_grid(grouping ~ trial_type) +
ylim(0, 1) +
scale_colour_manual(values = palette(nGroups = nGroups, nSubj = nSubj))
ggplot(data = df,
aes(x = session,
y = mean,
colour = subjID)) +
geom_line(alpha = 0.5) +
facet_grid(grouping ~ trial_type) +
ylim(0, 1) +
scale_colour_manual(values = palette(nGroups = nGroups, nIter = nIter))
ggplot(data = df,
aes(x = session,
y = mean,
colour = subjID)) +
geom_line(alpha = 0.5) +
facet_grid(. ~ trial_type) +
ylim(0, 1) +
scale_colour_manual(values = palette(nGroups = nGroups, nIter = nIter))
ggplot(data = df,
aes(x = session,
y = mean,
colour = subjID)) +
geom_line(alpha = 0.5) +
facet_grid(grouping ~ trial_type) +
ylim(0, 1) +
scale_colour_manual(values = palette(nGroups = nGroups, nIter = nIter))
devtools::load_all(".")
ggplot(data = df,
aes(x = session,
y = mean,
colour = subjID)) +
geom_line(alpha = 0.5) +
facet_grid(grouping ~ trial_type) +
ylim(0, 1) +
scale_colour_manual(values = palette_by_group(nGroups = nGroups, nIter = nIter))
ggplot(data = df,
aes(x = session,
y = mean,
colour = subjID)) +
geom_line(alpha = 0.5) +
facet_grid(grouping ~ trial_type) +
ylim(0, 1) +
scale_colour_manual(values = palette_by_group(nGroups = nGroups,
nIter = nIter)) +
theme('bw')
head(df)
ggplot(data = df,
aes(x = session,
y = mean,
colour = subjID)) +
geom_line(alpha = 0.5) +
facet_grid(grouping ~ trial_type) +
ylim(0, 1) +
scale_colour_manual(values = palette_by_group(nGroups = nGroups,
nIter = nIter))
ggplot(data = df,
aes(x = session,
y = mean,
colour = subjID)) +
geom_line(alpha = 0.5) +
facet_grid(grouping ~ trial_type) +
ylim(0, 1) +
scale_colour_manual(values = palette_by_group(nGroups = nGroups,
nIter = nIter))  +
theme_bw()
library('devtools')
library('tidyverse')
library('cowplot')
library('RColorBrewer')
